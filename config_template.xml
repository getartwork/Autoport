<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.12.0">
      <projectUrl></projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>META_NAME</name>
          <description>Job profile file name</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>META_CONTENTS</name>
          <description>Job parameters</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CMDENV</name>
          <description>Calculated environment variables</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CMD1</name>
          <description>Command to build the project</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CMD2</name>
          <description>Command to test the project</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CMD3</name>
          <description>Command to install the project to resolve a dependency in a batch file or a command to tar the project for packaging</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url></url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name></name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode></assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.0"/>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>echo $META_CONTENTS &gt; $META_NAME</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>#!/bin/bash
              if [ -n &quot;$CMD1&quot; ]; then
                 echo &quot;Autoport PATH: $PATH&quot; &gt; build_result.arti;
                 echo &quot;Autoport ENV:  $CMDENV&quot; &gt;&gt; build_result.arti;
                 echo &quot;Autoport cmd:  $CMD1&quot; &gt;&gt; build_result.arti;
                 echo &quot;&quot; &gt;&gt; build_result.arti;
                 echo $CMD1 | tee autoport_build_cmd;
                 chmod a+x autoport_build_cmd;
                 ./autoport_build_cmd;
              fi</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>#!/bin/bash
              if [ -n &quot;$CMD2&quot; ]; then
                 echo &quot;Autoport PATH: $PATH&quot; &gt; test_result.arti;
                 echo &quot;Autoport ENV:  $CMDENV&quot; &gt;&gt; test_result.arti;
                 echo &quot;Autoport cmd:  $CMD2&quot; &gt;&gt; test_result.arti;
                 echo &quot;&quot; &gt;&gt; test_result.arti;
                 echo $CMD2 | tee autoport_test_cmd;
                 chmod a+x autoport_test_cmd;
                 ./autoport_test_cmd;
              fi</command>
        </hudson.tasks.Shell>
        <hudson.tasks.Shell>
          <command>#!/bin/bash
              if [ -n &quot;$CMD3&quot; ]; then
                 echo &quot;Autoport PATH: $PATH&quot; &gt; install_result.arti;
                 echo &quot;Autoport ENV:  $CMDENV&quot; &gt;&gt; install_result.arti;
                 echo &quot;Autoport cmd:  $CMD3&quot; &gt;&gt; install_result.arti;
                 echo &quot;&quot; &gt;&gt; install_result.arti;
                 echo $CMD3 | tee autoport_install_cmd;
                 chmod a+x autoport_install_cmd;
                 ./autoport_install_cmd;
              fi</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.arti</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.91.3">
      <info>
        <propertiesContent></propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>
