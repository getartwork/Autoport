<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>7</daysToKeep>
    <numToKeep>3000</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>3000</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
		<hudson.model.StringParameterDefinition>
          <name>DISTRIBUTION</name>
          <description>The Linux distribution of the build server.</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PACKAGE_NAME</name>
          <description>The name of the package to be installed/removed/updated</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PACKAGE_VERSION</name>
          <description>The version of the package to be installed/removed/updated</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ACTION</name>
          <description>The action to be performed on the package. This will take either of the following values {"install", "remove", "update"}</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
	  </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode></assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
#
# This script will install/remove/update a package from a build server. RHEL and UBUNTU distributions are supported
# Inputs:   DISTRIBUTION    :   Linux distribution of the build server
#           PACKAGE_NAME    :   name of the package to be installed/removed/updated
#           PACKAGE_VERSION :   version of the package to be installed/removed/updated
#           ACTION          :   action to be performed. This variable will take either of the following values {"install", "remove", "update"}
#
# Exit Status:  0 if action ACTION was successful
#               1 if action ACTION was unsuccessful
#

# actionSuccess will be set to true if the action 'ACTION' is successful
actionSuccess=false

case $DISTRIBUTION in
    "RHEL")
        # Concatenate the package name and the version so that we install/remove/update the exact version as shown to the user in the UI.
        # If the PACKAGE_NAME = dos2unix.ppc64 and PACKAGE_VERSION = 3.1-37.el64 , then
        # FULL_PACKAGE_NAME = dos2unix-3.1-37.el64.ppc64 . This is the format used by the yum install, remove and update-to commands.
        FULL_PACKAGE_NAME=${PACKAGE_NAME%.*}-$PACKAGE_VERSION.${PACKAGE_NAME##*.}

        case $ACTION in
            "install")
                echo "#### Going to $ACTION package $FULL_PACKAGE_NAME"
                sudo yum -y install $FULL_PACKAGE_NAME
                installedVersion=$(rpm -q --queryformat '%{VERSION}\n' $PACKAGE_NAME )
                if [ $? -eq 0 ]
                then
                    actionSuccess=true
                fi
            ;;
            "update")
                echo "#### Going to $ACTION package $FULL_PACKAGE_NAME"
                sudo yum -y update-to $FULL_PACKAGE_NAME
                updatedVersion=$(rpm -q --queryformat '%{VERSION}\n' $PACKAGE_NAME )
                if [ "$updatedVersion" == "$PACKAGE_VERSION" ]
                then
                    actionSuccess=true
                fi
            ;;
            "remove")
                echo "#### Going to $ACTION package $FULL_PACKAGE_NAME"
                sudo yum -y remove $FULL_PACKAGE_NAME
                updatedVersion=$(rpm -q --queryformat '%{VERSION}\n' $PACKAGE_NAME )
                if [ $? -eq 1 ]
                then
                    actionSuccess=true
                fi
            ;;
        esac
    ;;
    "UBUNTU")
        # Concatenate the package name and the version so that we install/remove/update the exact version as shown to the user in the UI.
        # If the PACKAGE_NAME = dos2unix and PACKAGE_VERSION = 3.1-37 , then
        # FULL_PACKAGE_NAME = dos2unix=3.1-37 . This is the format used by the apt-get install and remove commands.
        FULL_PACKAGE_NAME="${PACKAGE_NAME}=$PACKAGE_VERSION"

        case $ACTION in
        "install")
            echo "#### Going to $ACTION package $FULL_PACKAGE_NAME"
            sudo apt-get update
            sudo apt-get -y --force-yes install $FULL_PACKAGE_NAME
            if [ $? -eq 0 ]; then
                actionSuccess=true
            fi
        ;;
        "update")
            echo "#### Going to $ACTION package $PACKAGE_NAME"
            sudo apt-get update
            sudo apt-get --only-upgrade -y --force-yes install $PACKAGE_NAME
            if [ $? -eq 0 ]; then
                actionSuccess=true
            fi
        ;;
        "remove")
            echo "#### Going to $ACTION package $FULL_PACKAGE_NAME"
            sudo apt-get update
            sudo apt-get -y remove $FULL_PACKAGE_NAME
            if [ $? -eq 0 ]; then
                actionSuccess=true
            fi
        ;;
        esac
    ;;
esac

if $actionSuccess
then
    echo "#### The action $ACTION was successful for package $PACKAGE_NAME"
	exit 0
else
    echo "#### The action $ACTION was un-successful for package $PACKAGE_NAME"
    exit 1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
